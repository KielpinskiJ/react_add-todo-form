{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUser","userId","usersFromServer","find","initialTodos","App","useState","setTitle","setUser","setTodos","formSubmitted","setFormSubmitted","action","method","onSubmit","event","preventDefault","newTodo","Number","Math","max","type","placeholder","value","onChange","target","selected","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31338fc6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [todos, setTodos] = useState(initialTodos);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  const handleSetTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleSetUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setUser('0');\n    setFormSubmitted(false);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (user !== '0' && title !== '') {\n      const newTodo: Todo = {\n        userId: Number(user),\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        user: getUser(Number(user)),\n      };\n\n      setTodos([...todos, newTodo]);\n      clearForm();\n    } else {\n      setFormSubmitted(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleSetTitle}\n          />\n          {formSubmitted\n          && title === ''\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleSetUser}\n          >\n            <option value=\"0\" selected disabled>Choose a user</option>\n            {usersFromServer.map(userFromServer => {\n              return (\n                <option value={userFromServer.id}>{userFromServer.name}</option>\n              );\n            })}\n          </select>\n\n          {formSubmitted\n          && user === '0'\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}